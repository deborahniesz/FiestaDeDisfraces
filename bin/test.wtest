import fiestaDisfraces.*

describe "Requerimientos"{
	
	var campesino = new Disfraz(nombre ="gauchito",fechaConfeccion = new Date(18,10,2018),
		                          caracteristicas = [],gracia = 4, genero ="masculino")
	var fantasma = new Disfraz(nombre ="asistente de la Parca",fechaConfeccion = new Date(6,7,2018),
		                          caracteristicas = [gracioso,tobara],gracia = 1, genero ="masculino")
	var cazaFantasma = new Disfraz(nombre="danny Phantom",fechaConfeccion= new Date(28,11,2018),
		                           caracteristicas = [gracioso],gracia=10,genero="femenino")	
    var nacionFuego = new Disfraz(nombre="esto no es tribu del agua",fechaConfeccion = new Date(11,11,2018),
    	                           caracteristicas =[gracioso], gracia=10,genero="neutro")
                          
	var helga = new Pretencioso(disfraz = campesino,edad = 15,idGenero=mujer,exigencia=20)
	var arnold = new Numerologo(disfraz = fantasma,edad = 52,idGenero=varon,exigencia = 3)
	var danny = new Persona(disfraz = cazaFantasma,edad=18,idGenero=noAclara,exigencia =10)
	var katara = new Persona(disfraz = nacionFuego,edad=18,idGenero=mujer,exigencia =10)
	var jakeLong = new Caprichoso(disfraz = noEsDisfraz,edad=17,idGenero=varon,exigencia =5)
	
	fixture{
		fiesta.invitarA(helga)
		fiesta.invitarA(arnold)
		fiesta.invitarA(danny)
		fiesta.invitarA(katara)
	}
	
test "se confirma que ciertos invitados asistieron a la fiesta"{
	  assert.that(fiesta.confirmarInvitados([arnold,helga]))
}

test "Determinar el puntaje de un disfraz" {
    assert.equals(30,danny.puntosPorDisfraz())
}

test "saber si la fiesta es un bodrio" {
	fiesta.quitarA(danny)
	fiesta.quitarA(arnold)
	fiesta.quitarA(katara)
	assert.notThat(fiesta.estaBuena())
}

test "saber quien es el mejor disfrazado" {
    assert.equals(danny,fiesta.mejorDisfrazado())
}

test "saber si invitado esta disconforme con Disfraz"{
	assert.that(helga.disconforme())
}

test "Tira error al querer cambiar disfraces teniendo un invitado que no quiere cambiar" {
		assert.throwsExceptionLike(noSeRealizaCambioExc, {helga.intercambiarDisfrazCon(arnold)})
}

test "dos invitados cambian disfraz"{
	katara.intercambiarDisfrazCon(danny)
	assert.equals(cazaFantasma,katara.disfraz())
}

test "Tira error si quiero agregar como invitado a alguien sin disfraz"{
	assert.throwsExceptionLike(noTieneDisfrazExc,{fiesta.invitarA(jakeLong)})
}

test "saber si la fiesta es inolvidable"{
	fiesta.quitarA(helga)
	fiesta.quitarA(katara)
	fiesta.quitarA(arnold)
	assert.that(fiesta.esInolvidable())
}
	
}